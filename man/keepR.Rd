% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/keepR.R
\name{keepR}
\alias{keepR}
\title{keepR Class}
\description{
A class for storing and retrieving various metrics for different models.
}
\examples{
\dontrun{
# Initialize the collector with metric names
collector <- keepR$new(c("R2", "Adj_R2", "RMSE"))

# Add a single model
collector$add("model1", c(R2 = 0.9, Adj_R2 = 0.89, RMSE = 0.1))

# Add multiple models in a batch
collector$add_batch(
  model_names = c("model2", "model3"),
  metrics_list = list(c(R2 = 0.85, Adj_R2 = 0.84, RMSE = 0.12), c(R2 = 0.8, Adj_R2 = 0.79, RMSE = 0.13))
)

# Retrieve metrics sorted by a specific metric
sorted_metrics <- collector$get_metrics("R2")

# Retrieve features of a specific model
features_model1 <- collector$get_features("model1")

# Remove a model
collector$remove("model3")

# Save metrics to a CSV file
collector$save_metrics("R2", "metrics.csv")

# Save metrics to a JSON file
collector$save_metrics("R2", "metrics.json")
}

## ------------------------------------------------
## Method `keepR$add_batch`
## ------------------------------------------------

\dontrun{
collector <- keepR$new(c("R2", "Adj_R2", "RMSE"))
collector$add_batch(
  model_names = c("model1", "model2"),
  metrics_list = list(c(R2 = 0.9, Adj_R2 = 0.89, RMSE = 0.1), c(R2 = 0.85, Adj_R2 = 0.84, RMSE = 0.12))
)
}

## ------------------------------------------------
## Method `keepR$remove`
## ------------------------------------------------

\dontrun{
collector$remove("model1")
}

## ------------------------------------------------
## Method `keepR$get_metrics`
## ------------------------------------------------

\dontrun{
sorted_metrics_asc <- collector$get_metrics("R2", ascending = TRUE)
sorted_metrics_desc <- collector$get_metrics("R2", ascending = FALSE)
top_10_models <- collector$get_metrics("R2", top_n = 10, ascending = FALSE)
}

## ------------------------------------------------
## Method `keepR$get_highest`
## ------------------------------------------------

\dontrun{
highest_R2 <- collector$get_highest("R2")
}

## ------------------------------------------------
## Method `keepR$get_lowest`
## ------------------------------------------------

\dontrun{
lowest_RMSE <- collector$get_lowest("RMSE")
}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{models}}{A list to store models along with their metrics.}

\item{\code{metric_names}}{A vector of names for the metrics to be stored.}

\item{\code{metric_cache}}{List of highest and lowest values of each model (including model-name)}

\item{\code{log_file}}{Optional. Name of a logfile. If nothing passed, log is printed in console}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-keepR-new}{\code{keepR$new()}}
\item \href{#method-keepR-add}{\code{keepR$add()}}
\item \href{#method-keepR-add_batch}{\code{keepR$add_batch()}}
\item \href{#method-keepR-get_features}{\code{keepR$get_features()}}
\item \href{#method-keepR-remove}{\code{keepR$remove()}}
\item \href{#method-keepR-get_metrics}{\code{keepR$get_metrics()}}
\item \href{#method-keepR-get_top_metrics}{\code{keepR$get_top_metrics()}}
\item \href{#method-keepR-get_highest}{\code{keepR$get_highest()}}
\item \href{#method-keepR-get_lowest}{\code{keepR$get_lowest()}}
\item \href{#method-keepR-save_metrics}{\code{keepR$save_metrics()}}
\item \href{#method-keepR-clone}{\code{keepR$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-keepR-new"></a>}}
\if{latex}{\out{\hypertarget{method-keepR-new}{}}}
\subsection{Method \code{new()}}{
Initializes an empty list to store models and sets the metric names.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{keepR$new(metric_names, log_file = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{metric_names}}{A vector of names for the metrics to be stored.}

\item{\code{log_file}}{Optional. A string specifying the file path where log entries will be saved.
If provided, log entries will be written to this file in CSV format (separated by ',').
If not provided, log entries will be printed to the console.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-keepR-add"></a>}}
\if{latex}{\out{\hypertarget{method-keepR-add}{}}}
\subsection{Method \code{add()}}{
Adds a model along with its metrics. Keep in mind: Adding a model that alreadys exists will be overwritten.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{keepR$add(model_name, metrics, features = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{model_name}}{The name of the model.}

\item{\code{metrics}}{A named vector or list containing the metrics.}

\item{\code{features}}{A named vector or list containing the metrics.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-keepR-add_batch"></a>}}
\if{latex}{\out{\hypertarget{method-keepR-add_batch}{}}}
\subsection{Method \code{add_batch()}}{
Adds multiple models along with their metrics in a batch.Keep in mind: Adding a model that alreadys exists will be overwritten.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{keepR$add_batch(model_names, metrics_list, features_list = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{model_names}}{A vector of names for the models.}

\item{\code{metrics_list}}{A list of named vectors or lists containing the metrics for each model.}

\item{\code{features_list}}{An optional list of named vectors or lists containing the features for each model.}
}
\if{html}{\out{</div>}}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
collector <- keepR$new(c("R2", "Adj_R2", "RMSE"))
collector$add_batch(
  model_names = c("model1", "model2"),
  metrics_list = list(c(R2 = 0.9, Adj_R2 = 0.89, RMSE = 0.1), c(R2 = 0.85, Adj_R2 = 0.84, RMSE = 0.12))
)
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-keepR-get_features"></a>}}
\if{latex}{\out{\hypertarget{method-keepR-get_features}{}}}
\subsection{Method \code{get_features()}}{
Retrieves the features used in a specific model.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{keepR$get_features(model_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{model_name}}{The name of the model.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A vector containing the features used in the model.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-keepR-remove"></a>}}
\if{latex}{\out{\hypertarget{method-keepR-remove}{}}}
\subsection{Method \code{remove()}}{
Removes a model based on its name and updates the cache if necessary.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{keepR$remove(model_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{model_name}}{The name of the model to remove.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
This method removes a model and its metrics from the list of stored models.
If the model to be removed is listed in the cache as having the highest or lowest value for any metric,
the cache will be recalculated. Note that recalculating the cache can be resource-intensive if a large number of models are stored.
}

\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
collector$remove("model1")
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-keepR-get_metrics"></a>}}
\if{latex}{\out{\hypertarget{method-keepR-get_metrics}{}}}
\subsection{Method \code{get_metrics()}}{
Sorts and displays the models based on a specific metric.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{keepR$get_metrics(sort_by, top_n = NULL, ascending = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sort_by}}{The name of the metric to sort by.}

\item{\code{top_n}}{The number of top models to return. If specified, the method will use \code{\link{get_top_metrics}} for more efficient sorting.}

\item{\code{ascending}}{Logical, whether to sort the metrics in ascending order. Default is TRUE.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
This method sorts the models based on the specified metric and returns the sorted list.
You can control the sort order using the \code{ascending} parameter. If \code{top_n} is specified, this method will call \code{\link{get_top_metrics}}, which uses partial sorting for efficiency.
}

\subsection{Returns}{
A data frame containing the sorted models.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
sorted_metrics_asc <- collector$get_metrics("R2", ascending = TRUE)
sorted_metrics_desc <- collector$get_metrics("R2", ascending = FALSE)
top_10_models <- collector$get_metrics("R2", top_n = 10, ascending = FALSE)
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-keepR-get_top_metrics"></a>}}
\if{latex}{\out{\hypertarget{method-keepR-get_top_metrics}{}}}
\subsection{Method \code{get_top_metrics()}}{
Retrieves the top n models based on a specific metric using partial sorting for efficiency.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{keepR$get_top_metrics(sort_by, top_n, ascending = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sort_by}}{The name of the metric to sort by.}

\item{\code{top_n}}{The number of top models to return.}

\item{\code{ascending}}{Logical, whether to sort the metrics in ascending order. Default is TRUE.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
This method uses partial sorting to efficiently find the top top_n models based on the specified metric.
}

\subsection{Returns}{
A data frame containing the top n models.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-keepR-get_highest"></a>}}
\if{latex}{\out{\hypertarget{method-keepR-get_highest}{}}}
\subsection{Method \code{get_highest()}}{
Retrieves the highest value and corresponding model name for a given metric.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{keepR$get_highest(metric_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{metric_name}}{The name of the metric to query.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
This method queries the cache to find the highest value for the given metric and the model that has this value.
Using the cache makes this method much more efficient than manually sorting the metrics obtained from `get_metrics`.
}

\subsection{Returns}{
A list containing the highest value (`value`) and the corresponding model name (`model`).
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
highest_R2 <- collector$get_highest("R2")
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-keepR-get_lowest"></a>}}
\if{latex}{\out{\hypertarget{method-keepR-get_lowest}{}}}
\subsection{Method \code{get_lowest()}}{
Retrieves the lowest value and corresponding model name for a given metric.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{keepR$get_lowest(metric_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{metric_name}}{The name of the metric to query.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
This method queries the cache to find the lowest value for the given metric and the model that has this value.
Using the cache makes this method much more efficient than manually sorting the metrics obtained from `get_metrics`.
}

\subsection{Returns}{
A list containing the lowest value (`value`) and the corresponding model name (`model`).
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
lowest_RMSE <- collector$get_lowest("RMSE")
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-keepR-save_metrics"></a>}}
\if{latex}{\out{\hypertarget{method-keepR-save_metrics}{}}}
\subsection{Method \code{save_metrics()}}{
Save metrics as csv or json based on the file extension
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{keepR$save_metrics(sort_by, file_name, subdomain = "results", ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sort_by}}{output sorting variable}

\item{\code{file_name}}{Filename, no path, with extension (.csv or .json)}

\item{\code{subdomain}}{subdomain where file shall be saved. If subdoomain does not exist, it will be created using mytools::create_directories(subdomain). Default is 'results'}

\item{\code{...}}{further arguments to mytools::write.csv.fast or toJSON}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
NULL - saving as side effect
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-keepR-clone"></a>}}
\if{latex}{\out{\hypertarget{method-keepR-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{keepR$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
